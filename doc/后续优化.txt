


1.文件传输完毕后，对传输内容进行总结
传输了多少文件、传输耗时、平均传输效率(MB/s)、放到了哪个目录下

2.后续提升效能，能够实现并发传输

3.后续改成配置式的，
每次输入host/port/root dir这些参数太麻烦了
对于最近传输的host/port，能够设置为默认的。

4.能够实现整体目录的校验功能
目前只能支持单个文件的md5校验
后续加入整个文件夹的校验功能。
比如我们传输完成一个目录，就要对这整个目录进行校验。
比如我们之前传输的genlib16,文件数量可以对得上，但是文件夹总大小貌似对不上。
可能有文件没有传输成功。

5.按照目录传输的时候，能够在服务端生成目录名称

5.按照目录传输的时候，能够传输嵌套目录的文件
比如我们这次要传输的dir为：
/Users/zhoushuo/Downloads/genlib14

如果这个目录下有一个(嵌套目录的)文件：
Users/zhoushuo/Downloads/genlib14/mydir/a.txt

那么a.txt的dir就是genlib14/mydir
对于这种情况，我们也要支持



7.能够实现自动打包
能够针对ftp-client/ftp-server自动打包
不用我们手工来回切换

8.连接断开的时候能够更加友好
目前服务端如果发现要传输的文件已经传过了，就会主动断开连接
此时客户端就会报错。
后续要更加优化，双方握手断开连接。
或者通过client端输入by命令断开连接

9.能够实现正式ftp软件那种交互式的，
比如list local dir/list remote dir
change local dir/change remote dir这类的功能

能够实现put XXX/ get XXX这类功能



10.传输过程中，能够展示传输进度

===============已经完成


6.能够处理重复文件
比如我们传输某个目录：
/Users/zhoushuo/Downloads/genlib15
传输了一半断开了

我们第二次传输这个目录，之前已经传输过的文件，经MD5校验过后，就无需重复传输了。
类似于断点续传的功能。
